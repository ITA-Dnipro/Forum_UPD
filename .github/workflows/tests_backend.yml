name: Testing BackEnd
on: pull_request

env:
  DEBUG: True
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  PG_DB: db
  PG_USER: postgres
  PG_PASSWORD: postgres
  DB_HOST: 127.0.0.1
  DB_PORT: 5432
  EMAIL_BACKEND: ${{vars.EMAIL_BACKEND}}
  EMAIL_HOST: 'localhost'
  EMAIL_PORT: ${{ vars.EMAIL_PORT }}
  EMAIL_USE_TLS: 1
  EMAIL_HOST_USER: test@example.com
  EMAIL_HOST_PASSWORD: Test1234
  CORS_ORIGIN_WHITELIST: ''
  ALLOWED_ENV_HOST: ''
  REDIS_URL: ${{ vars.REDIS_URL }}
  RECAPTCHA_V2_PRIVATE_KEY: ''
  RECAPTCHA_URL: ${{ vars.RECAPTCHA_URL }}


jobs:
  build:
    name: Testing
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: db
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.9"
      - name: install ./BackEnd/requirements.txt
        run: |
          python -m pip install --upgrade pip
          pip install -r ./BackEnd/requirements.txt
      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..10}; do
            if pg_isready -h 127.0.0.1 -p 5432; then
              echo "PostgreSQL is ready!"
              break
            fi
            echo "Waiting for PostgreSQL..."
            sleep 3
          done
      - name: Create Migrations
        run: |
          cd BackEnd
          python manage.py makemigrations
          python manage.py migrate
      - name: running tests
        run: |
          cd BackEnd
          python manage.py test --settings=forum.test_setting
